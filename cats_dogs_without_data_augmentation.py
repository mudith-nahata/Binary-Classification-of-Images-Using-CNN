# -*- coding: utf-8 -*-
"""cats-dogs without data Augmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p2zXAb58I9eEj7yhde6PaujltuvPe81_
"""

!mkdir -p ~/.kaggle
!cp kaggle.json ~/kaggle.json

!kaggle datasets download -d salader/dogs-vs-cats

#Converting Zipfile to Normal file
import zipfile
zip_ref=zipfile.ZipFile('/content/dogs-vs-cats.zip','r')
zip_ref.extractall('/content')
zip_ref.close()

import cv2
import os
import random
import numpy as np

categories=['cats','dogs']

data=[]
for i in categories:
  path=os.path.join('/content/train',i)
  if i=='cats':
    label=0
  else:
    label=1
  for img in os.listdir(path):
    img_path=os.path.join(path,img)
    img_array=cv2.imread(img_path)
    img_array=cv2.resize(img_array,(150,150))
    data.append([img_array,label])

random.shuffle(data)

X=[]
y=[]
for i in data:
  X.append(i[0])
  y.append(i[1])

X=np.array(X)
y=np.array(y)



X.shape

import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Dense,Dropout,Activation,Flatten,Conv2D,MaxPooling2D

model=Sequential()
model.add(Conv2D(32,(3,3),input_shape=(150,150,3)))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(32,(3,3)))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(64,(3,3)))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(64))
model.add(Activation('relu'))
model.add(Dropout(0.5))
model.add(Dense(1))
model.add(Activation('sigmoid'))

model.compile(loss='binary_crossentropy',optimizer='rmsprop',metrics=['accuracy'])

model.fit(X,y,epochs=10,validation_split=0.1)